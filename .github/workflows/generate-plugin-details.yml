name: Generate Plugin Details

on:
  push:
    branches:
      - main
    paths:
      - 'plugins.json'
  schedule:
    - cron: '0 0 * * *'

jobs:
  generate-details:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Generate plugin details
        run: |
          node <<'EOL'
          const fs = require('fs');
          const https = require('https');

          async function main() {
            try {
              const plugins = JSON.parse(fs.readFileSync('plugins.json', 'utf8'));
              console.log(`Found ${plugins.length} plugins in plugins.json`);

              // 跳过第一个插件
              const pluginsToProcess = plugins.slice(1);
              console.log(`Processing ${pluginsToProcess.length} plugins (skipping first one)`);

              const pluginDetails = [];

              for (const plugin of pluginsToProcess) {
                try {
                  console.log(`Fetching manifest for plugin: ${plugin.id}`);
                  const manifest = await fetchManifest(plugin.repositoryUrl);
                  
                  pluginDetails.push({
                    id: plugin.id,
                    manifest: manifest
                  });
                  
                  console.log(`✅ Successfully processed plugin: ${plugin.id}`);
                } catch (error) {
                  console.error(`❌ Failed to process plugin ${plugin.id}: ${error.message}`);
                  // 继续处理其他插件，不中断整个流程
                }
              }

              // 写入 plugin_details.json 文件
              fs.writeFileSync('plugin_details.json', JSON.stringify(pluginDetails, null, 2));
              console.log(`✅ Generated plugin_details.json with ${pluginDetails.length} plugins`);

            } catch (error) {
              console.error(`❌ Process failed: ${error.message}`);
              process.exit(1);
            }
          }

          function fetchManifest(repoUrl) {
            // 将 https://github.com/user/repo 转换为 https://raw.githubusercontent.com/user/repo/main/_manifest.json
            const rawUrl = repoUrl.replace('github.com', 'raw.githubusercontent.com') + '/main/_manifest.json';
            console.log(`Fetching manifest from: ${rawUrl}`);

            return new Promise((resolve, reject) => {
              https.get(rawUrl, res => {
                if (res.statusCode !== 200) {
                  return reject(new Error(`Could not fetch _manifest.json from repository. Status Code: ${res.statusCode}`));
                }
                let data = '';
                res.on('data', chunk => data += chunk);
                res.on('end', () => {
                  try {
                    resolve(JSON.parse(data));
                  } catch (parseError) {
                    reject(new Error(`Invalid JSON in _manifest.json: ${parseError.message}`));
                  }
                });
              }).on('error', err => reject(new Error(`Network error fetching manifest: ${err.message}`)));
            });
          }

          main();
          EOL

      - name: Commit and push plugin details
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add plugin_details.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-generate plugin_details.json"
            git push
          fi
